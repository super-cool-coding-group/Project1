George Matta
Version 1.0

Where N is the size of bag1, and K is the size of bag2.
-Union-

Best Case:
O(N + K)

Worst Case:
O(N + K)

--------------------------------------------------------------------------------
Where N is the size of bag1, K is the size of bag2, C is the size of the copied bag.

-Intersection-

We copy the elements of bag2 into a new bag (so we are already at O(K))

We iterate through bag1 (O(N))
We remove an element from bag2 (O(C))

C is basically K - N in the best case (we remove an element every iteration)


Best Case:
O(K + N + C)
O(K + N + K - N)
O(2K)

Worst Case:
O(K + N + C)

--------------------------------------------------------------------------------
Where N is the size of bag1, K is the size of bag2, C is the size of the copied bag.

-Difference-

We copy the elements of bag2 into a new bag (so we are already at O(K))

We iterate through bag1 (O(N))
We remove an element from bag2 (O(C))

C is basically K - N in the best case (we remove an element every iteration)


Best Case:
O(K + N + C)
O(K + N + K - N)
O(2K)

Worst Case:
O(K + N + C)

This is the same as insertion, but we're just checking if the element is not in the list
rather than if it is